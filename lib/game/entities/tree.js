// Generated by CoffeeScript 1.4.0
(function() {
  /*;

  var EntityTree;

  EntityTree = {};

  */;


  ig.module('game.entities.tree').requires('game.entities.common.base-entity').defines(function() {
    return EntityTree = EntityBaseEntity.extend({
      size: {
        x: 85,
        y: 55
      },
      offset: {
        x: 65,
        y: 155
      },
      collides: ig.Entity.COLLIDES.FIXED,
      type: ig.Entity.TYPE.A,
      animSheet: new ig.AnimationSheet('media/environment/tree.png', 220, 211),
      treeStrike: new ig.Sound('media/sounds/tree-strike.*'),
      treeFall: new ig.Sound('media/sounds/tree-fall.*'),
      flashTimer: null,
      flashCurrent: 0,
      flashTime: 0.1,
      flashAlphas: [0.5, 1, 0.5, 1],
      entityType: 'tree',
      init: function(x, y, settings) {
        this.addAnim('idle', 1000, [0]);
        return this.parent(x, y, settings);
      },
      receiveDamage: function(amount, from) {
        this.flash();
        if (this.health - amount > 0) {
          this.treeStrike.play();
        }
        return this.parent(amount, from);
      },
      kill: function() {
        this.treeFall.play();
        return this.parent();
      },
      flash: function() {
        return this.flashTimer = new ig.Timer(this.flashTime);
      },
      draw: function() {
        var _ref, _ref1, _ref2;
        if (((_ref = this.flashTimer) != null ? _ref.delta() : void 0) < 0) {
          this.currentAnim.alpha = this.flashTimer.delta().map(0, -this.flashTimer.target, this.flashAlphas[this.flashCurrent], ((_ref1 = this.flashCurrent) === 0 || _ref1 === 2 ? 1 : 0.5));
        } else {
          if (this.flashCurrent === 3) {
            this.flashCurrent = 0;
            this.flashTimer = null;
          } else {
            this.flashCurrent++;
            if ((_ref2 = this.flashTimer) != null) {
              _ref2.reset();
            }
          }
        }
        return this.parent();
      }
    });
  });

}).call(this);
