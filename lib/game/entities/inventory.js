// Generated by CoffeeScript 1.4.0
(function() {
  /*;

  var EntityInventory;

  EntityInventory = {};

  */;


  ig.module('game.entities.inventory').requires('game.entities.common.static-entity').defines(function() {
    return EntityInventory = EntityStaticEntity.extend({
      size: {
        x: 320,
        y: 200
      },
      animSheet: new ig.AnimationSheet('media/menus/menu.png', 320, 200),
      collides: ig.Entity.COLLIDES.NEVER,
      name: 'inventory',
      zIndex: 100,
      items: ['umbrella', 'shoe'],
      isVisible: false,
      init: function(x, y, settings) {
        var i, newItem, newItems, oldItem, oldItems, _i, _len;
        oldItems = this.items;
        newItems = [];
        for (i = _i = 0, _len = oldItems.length; _i < _len; i = ++_i) {
          oldItem = oldItems[i];
          newItem = ig.game.spawnEntity(EntityInventoryItem, 0, 0, {
            name: oldItem
          });
          newItem.pos = {
            x: (ig.system.width - newItem.size.x) / 2,
            y: (ig.system.height - this.size.y) / 2 + (i * 70) + 20
          };
          newItems.push(newItem);
        }
        this.items = newItems;
        return this.parent(x, y, settings);
      },
      draw: function() {
        if (this.isVisible) {
          this.setItemsVisibility(true);
          return this.parent();
        } else {
          return this.setItemsVisibility(false);
        }
      },
      setItemsVisibility: function(visible) {
        var item, _i, _len, _ref, _results;
        _ref = this.items;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          item = _ref[_i];
          _results.push(item.isVisible = visible);
        }
        return _results;
      }
    });
  });

}).call(this);
